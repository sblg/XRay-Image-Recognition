import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from src.model_architecture import create_model

# Constants
input_shape = (150, 150, 3)
num_classes = 2
batch_size = 32
epochs = 10

# Load the dataset and split into train and test sets
train_data_dir = 'data/train'
test_data_dir = 'data/test'

train_datagen = ImageDataGenerator(rescale=1./255)
test_datagen = ImageDataGenerator(rescale=1./255)

train_generator = train_datagen.flow_from_directory(
        train_data_dir,
        target_size=input_shape[:2],
        batch_size=batch_size,
        class_mode='categorical')

test_generator = test_datagen.flow_from_directory(
        test_data_dir,
        target_size=input_shape[:2],
        batch_size=batch_size,
        class_mode='categorical')

# Create the model
model = create_model(input_shape, num_classes)
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(train_generator, epochs=epochs, validation_data=test_generator)

# Save the model
model.save('models/xray_classification_model.h5')
